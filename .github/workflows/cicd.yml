name: Hello GitHub Actions
on: 
  push:
    paths:
      - '.github/workflows/**'
      - 'cicd-section/api/**'

env:
  AWS_REGION: ap-northeast-1
  ECS_CLUSTER: my-app-cluster
  ECS_SERVICE: my-app-api-service
  ECR_REPOSITORY: my-app-api
  ECS_TASK_DEFINITION_API: cicd-section/.aws/task-def-api.json

permissions:
  id-token: write
  contents: read

jobs:
  # Test/Build
  test-and-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cicd-section/api
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Tests and Build an Image
        run: docker image build -t temp_api_image:latest .
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run:
          docker image tag temp_api_image:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}

          docker image push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}

          echo $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} > api-image-uri.txt

      - name: Upload the image uri file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: api-image-url
          path: cicd-section/api/api-image-uri.txt
# Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [test-and-build]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Dounload the artifact
        uses: actions/download-artifact@v2
        with:
          name: api-image-url
          path: artifacts

      - name: Define the image URI
        run:
          echo "API_IMAGE_URI=${cat artifacts/api-image-uri.txt}" >> $GITHUB_ENV


